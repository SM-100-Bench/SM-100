{"scanned_subsystems":[{"name":"Text Handling","files":["lib/line_wrapper.js","lib/mixins/text.js"]}],"changesets":[{"title":"Fix Text Handling Subsystem Bugs: Word Spacing and Color Handling","body":"## Bug Fixes in Text Handling Subsystem\n\nThis pull request addresses two critical bugs in the text handling functionality:\n\n### 1. Word Spacing Assignment Bug\n- **Location**: `lib/line_wrapper.js`, LineWrapper constructor\n- **Issue**: Incorrect assignment of `wordSpacing` as a boolean value\n- **Fix**: Modified the assignment to properly handle numeric values, especially when `wordSpacing` is 0\n- **Changes**:\n  - Replaced `this.wordSpacing = options.wordSpacing === 0;`\n  - With `this.wordSpacing = options.wordSpacing != null ? options.wordSpacing : 0;`\n- **Impact**: Ensures `wordSpacing` remains a numeric value, preventing potential calculation errors in methods like `wordWidth`\n\n### 2. Color Handling Safety Improvements\n- **Locations**: \n  - `lib/line_wrapper.js` (nextSection method)\n  - `lib/mixins/text.js` (_fragment method)\n- **Issue**: Potential runtime errors when spreading `_fillColor` without array type checking\n- **Fix**: Added array type checking and conversion for `_fillColor`\n- **Changes**:\n  - Added a check to convert non-array `_fillColor` to an array before spreading\n  - Prevents unexpected behavior when `_fillColor` is a truthy non-array value\n\n### Testing\n- Verified fixes do not introduce new side effects\n- Ensured backward compatibility with existing code\n- Improved type safety for color and spacing handling\n\nResolves potential bugs that could cause unexpected rendering or calculation issues in text processing.","commits":[{"message":"Fix the bug in the LineWrapper constructor where wordSpacing is incorrectly assigned as a boolean value (line 9) when it should be a numeric value. The current code has `this.wordSpacing = options.wordSpacing === 0;` which evaluates to a boolean, but wordSpacing is used as a numeric value in the wordWidth method and elsewhere. Change it to properly handle the case when wordSpacing is 0 while maintaining it as a numeric value.","diff":"diff --git a/lib/line_wrapper.js b/lib/line_wrapper.js\nindex d37817d..d577a90 100644\n--- a/lib/line_wrapper.js\n+++ b/lib/line_wrapper.js\n@@ -7,7 +7,7 @@ class LineWrapper extends EventEmitter {\n     this.document = document;\n     this.indent = options.indent || 0;\n     this.characterSpacing = options.characterSpacing || 0;\n-    this.wordSpacing = options.wordSpacing === 0;\n+    this.wordSpacing = options.wordSpacing != null ? options.wordSpacing : 0;\n     this.columns = options.columns || 1;\n     this.columnGap = options.columnGap != null ? options.columnGap : 18; // 1/4 inch\n     this.lineWidth ="},{"message":"Fix the potential issue in the nextSection method (line 313) and _fragment method (line 339) where _fillColor is spread using the spread operator (...) without checking if it's an array. If _fillColor is truthy but not an array, this could cause unexpected behavior. Modify the code to ensure that _fillColor is always treated as an array before spreading it.","diff":"diff --git a/lib/line_wrapper.js b/lib/line_wrapper.js\nindex d577a90..cf2d278 100644\n--- a/lib/line_wrapper.js\n+++ b/lib/line_wrapper.js\n@@ -311,7 +311,8 @@ class LineWrapper extends EventEmitter {\n       this.maxY = this.document.page.maxY();\n       this.document.x = this.startX;\n       if (this.document._fillColor) {\n-        this.document.fillColor(...(this.document._fillColor || []));\n+        const fillColor = Array.isArray(this.document._fillColor) ? this.document._fillColor : [this.document._fillColor];\n+        this.document.fillColor(...fillColor);\n       }\n       this.emit('pageBreak', options, this);\n     } else {\ndiff --git a/lib/mixins/text.js b/lib/mixins/text.js\nindex 43903ab..e70c096 100644\n--- a/lib/mixins/text.js\n+++ b/lib/mixins/text.js\n@@ -337,7 +337,8 @@ export default {\n     if (options.underline || options.strike) {\n       this.save();\n       if (!options.stroke) {\n-        this.strokeColor(...(this._fillColor || []));\n+        const fillColor = Array.isArray(this._fillColor) ? this._fillColor : [this._fillColor];\n+        this.strokeColor(...(fillColor || []));\n       }\n \n       const lineWidth ="}]}]}