{"scanned_subsystems":[{"name":"Model","files":["lib/helpers/model/applyDefaultsToPOJO.js","lib/helpers/model/applyHooks.js","lib/helpers/model/applyMethods.js","lib/helpers/model/applyStaticHooks.js","lib/helpers/model/applyStatics.js","lib/helpers/model/castBulkWrite.js","lib/helpers/model/discriminator.js","lib/helpers/model/pushNestedArrayPaths.js","lib/model.js"]}],"changesets":[{"title":"Fix Race Condition in Model.prototype.save","body":"## Issue\nA race condition was discovered in the `Model.prototype.save` method that could potentially lead to memory leaks and confusing error messages.\n\n## Details\nIn the current implementation, when multiple save operations are attempted simultaneously:\n- A new `ParallelSaveError` was being created even when one already existed\n- This could result in unnecessary error object creation\n- The existing `this.$__.saving` error was being overwritten\n\n## Fix\nModified the code to reuse the existing `ParallelSaveError` instance when a save operation is already in progress:\n- If `this.$__.saving` is already set, use the existing error object\n- Only create a new `ParallelSaveError` if no save operation is currently in progress\n\n## Impact\n- Prevents potential memory leaks\n- Ensures consistent error handling for concurrent save operations\n- Improves overall stability of the Model subsystem\n\nResolves the race condition in lines 544-590 of the Model save method.","commits":[{"message":"Fix the race condition in Model.prototype.save (lines 544-590) where a new ParallelSaveError is created even when one already exists. The issue is that when this.$__.saving is already set, a new ParallelSaveError is created but not used, and then this.$__.saving is immediately overwritten with another new ParallelSaveError. This could lead to memory leaks or confusing error messages. The fix should ensure we only create one ParallelSaveError instance when multiple save operations happen simultaneously.","diff":"diff --git a/lib/model.js b/lib/model.js\nindex 5e0a105..b2ea4a9 100644\n--- a/lib/model.js\n+++ b/lib/model.js\n@@ -551,7 +551,7 @@ Model.prototype.save = async function save(options) {\n   this.$op = 'save';\n \n   if (this.$__.saving) {\n-    parallelSave = new ParallelSaveError(this);\n+    parallelSave = this.$__.saving;\n   } else {\n     this.$__.saving = new ParallelSaveError(this);\n   }"}]}]}