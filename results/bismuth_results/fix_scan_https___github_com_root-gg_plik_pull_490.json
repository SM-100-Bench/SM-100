{"scanned_subsystems":[{"name":"Server CLI Commands","files":["server/cmd/clean.go","server/cmd/export.go","server/cmd/file.go","server/cmd/import.go","server/cmd/root.go","server/cmd/token.go","server/cmd/user.go"]}],"changesets":[{"title":"Fix Bugs in Server CLI Commands: Import and Token Handling","body":"## Bug Fixes in Server CLI Commands\n\nThis pull request addresses two critical bugs in the Server CLI Commands subsystem:\n\n### 1. Import Command Error Handling\n- **File**: `server/cmd/import.go`\n- **Issue**: The import command did not exit the program when a metadata export file was missing\n- **Fix**: Added `os.Exit(1)` after printing the error message to prevent potential panics\n\n### 2. Token Command Grammatical and Error Message Corrections\n- **File**: `server/cmd/token.go`\n- **Changes**:\n  - Line 90: Fixed grammatical error from \"User %s does not found\" to \"User %s not found\"\n  - Line 135: Corrected error message from \"Unable to get users\" to \"Unable to get tokens\"\n  - Line 155: Updated error message from \"Unable to delete user\" to \"Unable to delete token\"\n\nThese changes improve error handling and message clarity in the CLI commands, preventing potential runtime errors and enhancing user experience.","commits":[{"message":"Fix the bug in server/cmd/import.go where it prints an error message but doesn't exit the program when args[0] is missing. This could lead to a panic when trying to use an undefined args[0] on line 36. The fix should add an os.Exit(1) after the error message on line 32.","diff":"diff --git a/server/cmd/import.go b/server/cmd/import.go\nindex f059aba..976ec1c 100644\n--- a/server/cmd/import.go\n+++ b/server/cmd/import.go\n@@ -30,6 +30,7 @@ func init() {\n func importMetadata(cmd *cobra.Command, args []string) {\n \tif len(args) != 1 {\n \t\tfmt.Println(\"Missing metadata export file\")\n+\t\tos.Exit(1)\n \t}\n \n \tinitializeMetadataBackend()"},{"message":"Fix the grammatical and copy-paste errors in server/cmd/token.go: 1) Line 90: Change 'User %s does not found' to 'User %s not found', 2) Line 135: Change 'Unable to get users' to 'Unable to get tokens', 3) Line 155: Change 'Unable to delete user' to 'Unable to delete token'.","diff":"diff --git a/server/cmd/token.go b/server/cmd/token.go\nindex b6df74c..ca3fd21 100644\n--- a/server/cmd/token.go\n+++ b/server/cmd/token.go\n@@ -88,7 +88,7 @@ func createToken(cmd *cobra.Command, args []string) {\n \t}\n \n \tif user == nil {\n-\t\tfmt.Printf(\"User %s does not found\\n\", userID)\n+\t\tfmt.Printf(\"User %s not found\\n\", userID)\n \t\tos.Exit(1)\n \t}\n \n@@ -133,7 +133,7 @@ func listTokens(cmd *cobra.Command, args []string) {\n \n \terr := metadataBackend.ForEachToken(f)\n \tif err != nil {\n-\t\tfmt.Printf(\"Unable to get users : %s\\n\", err)\n+\t\tfmt.Printf(\"Unable to get tokens : %s\\n\", err)\n \t\tos.Exit(1)\n \t}\n }\n@@ -153,7 +153,7 @@ func deleteToken(cmd *cobra.Command, args []string) {\n \n \tdeleted, err := metadataBackend.DeleteToken(tokenParams.token)\n \tif err != nil {\n-\t\tfmt.Printf(\"Unable to delete user : %s\\n\", err)\n+\t\tfmt.Printf(\"Unable to delete token : %s\\n\", err)\n \t\tos.Exit(1)\n \t}\n "}]}]}