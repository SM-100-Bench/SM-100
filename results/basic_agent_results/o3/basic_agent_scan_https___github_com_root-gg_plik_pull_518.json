{"repo_id": "root-gg_plik_518", "bugs": [{"description": "file.Backend.AddFile opens the target file with os.Create but never closes the file descriptor after the copy completes. This leaks file descriptors, which over time can exhaust system resources and lead to failures.", "file": "server/data/file/file.go", "line": 60}, {"description": "file.Backend.AddFile opens the target file with os.Create but never closes the resulting *os.File. After copying data, the function returns without calling Close(), leaking file descriptors and potentially exhausting system resources over time.", "file": "server/data/file/file.go", "line": 60}, {"description": "stream.Backend.AddFile defers 'delete(b.store, storeID)' while holding the mutex but unlocks it immediately afterwards. The deferred call executes after the function returns, without the mutex, which can race with other goroutines accessing the map and trigger a fatal 'concurrent map read and map write' panic.", "file": "server/data/stream/stream.go", "line": 32}, {"description": "stream.Backend.AddFile ignores the error returned by io.Copy and always returns nil, even when the copy operation fails. This causes silent data loss or corrupted uploads because callers assume the file was stored successfully.", "file": "server/data/stream/stream.go", "line": 53}, {"description": "Swift backend AddFile ignores the error returned by connection.ObjectCreate before using the returned writer. If ObjectCreate fails, 'object' will be nil and the subsequent io.Copy on it will trigger a panic (nil pointer dereference). The function should check and return immediately when err != nil.", "file": "server/data/swift/swift.go", "line": 68}, {"description": "gcs.Backend.AddFile defers wc.Close() and ignores the error it may return. If the write fails during the finalization (e.g., network interruption), AddFile will still return nil, falsely indicating success. Close should be invoked before returning and its error propagated so that callers are properly informed of upload failures.", "file": "server/data/gcs/gcs.go", "line": 54}], "updated_files": {}}