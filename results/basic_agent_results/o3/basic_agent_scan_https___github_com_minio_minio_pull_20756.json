{"repo_id": "minio_minio_20756", "bugs": [{"description": "io.LimitReader is called with r.ContentLength as the limit when decrypting request bodies (e.g., madmin.DecryptData(password, io.LimitReader(r.Body, r.ContentLength))). If the client sends the request with 'Transfer-Encoding: chunked' or otherwise without a Content-Length header, r.ContentLength is -1. Passing a negative limit to io.LimitReader makes it return a reader that immediately returns EOF, so the body is read as empty and decryption fails, leading to incorrect behavior. This can also be abused to cause unexpected request failures. The code should handle unknown content lengths by reading the body directly or enforcing a sane maximum, not by blindly using r.ContentLength.", "file": "cmd/admin-bucket-handlers.go", "line": 167}, {"description": "Same issue with using io.LimitReader with r.ContentLength (-1) exists in multiple admin handler files (e.g., admin-handlers-config-kv.go, admin-handlers-idp-config.go, admin-handlers-idp-ldap.go, admin-handlers-users.go). All should validate ContentLength or default to a max limit instead of passing negative values.", "file": "cmd/admin-handlers-config-kv.go", "line": 59}], "updated_files": {}}