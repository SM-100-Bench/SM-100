{"repo_id": "47ng_nuqs_821", "bugs": [{"description": "In environments where the global `performance` object is not available (e.g., server-side Node.js or certain older browsers), calling `performance.mark` will throw a ReferenceError when debug logging is enabled. The `debug` function should verify that `performance` exists and that `performance.mark` is a function before invoking it.", "file": "packages/nuqs/src/debug.ts", "line": 8}, {"description": "The patched versions of `history.pushState` and `history.replaceState` ignore the `title` argument provided by callers. They always forward an empty string (`''`) as the title to the original methods. This discards any legitimate title value callers may want to store in the history entry and can break applications relying on it.\nA safe patch should forward the `marker` (title) argument unchanged to the original methods.", "file": "packages/nuqs/src/adapters/lib/patch-history.ts", "line": 53}, {"description": "In environments where the global `performance` object is not available (e.g., server-side Node.js or certain older browsers), calling `performance.mark` will throw a ReferenceError when debug logging is enabled. The `debug` function should verify that `performance` exists and that `performance.mark` is a function before invoking it.", "file": "packages/nuqs/src/debug.ts", "line": 8}, {"description": "The patched versions of `history.pushState` and `history.replaceState` ignore the `title` argument provided by callers. They always forward an empty string (`''`) as the title to the original methods. This discards any legitimate title value callers may want to store in the history entry and can break applications relying on it.\nA safe patch should forward the `marker` (title) argument unchanged to the original methods.", "file": "packages/nuqs/src/adapters/lib/patch-history.ts", "line": 53}, {"description": "renderQueryString does not encode the percent sign (%) in parameter keys. If a key contains a literal '%' that is not part of a valid percent-escape sequence, the constructed URL may become malformed or be interpreted incorrectly by browsers, potentially leading to lost or truncated query data. Values are correctly percent-encoded by encodeQueryValue, but keys are only escaped for #, &, +, = and ?, omitting '%'.", "file": "packages/nuqs/src/url-encoding.ts", "line": 11}], "updated_files": {}}