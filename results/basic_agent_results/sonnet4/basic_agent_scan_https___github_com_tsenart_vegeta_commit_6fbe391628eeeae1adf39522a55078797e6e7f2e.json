{"repo_id": "tsenart_vegeta_6fbe391628eeeae1adf39522a55078797e6e7f2e", "bugs": [{"description": "IP address filtering logic bug in DNSCaching function. The logic attempts to select one IPv4 and one IPv6 address but has incorrect conditions. The condition `len(ip.To4()) == net.IPv4len && j == 0` only selects IPv4 when j==0, and `len(ip) == net.IPv6len && j == 1` only selects IPv6 when j==1. This means if an IPv6 address is encountered first (j==0) or an IPv4 address is encountered when j==1, they won't be selected, potentially resulting in no addresses being selected or only one type being selected.", "file": "lib/attack.go", "line": 337}, {"description": "Potential panic in NewStaticTargeter when empty targets slice is passed. The function uses modulo operation on len(tgts) without checking if the slice is empty, which would cause a division by zero panic when the targeter function is called.", "file": "lib/targets.go", "line": 225}, {"description": "Potential panic in NewRoundRobinDecoder when empty decoder slice is passed. The function uses modulo operation on len(dec) without checking if the slice is empty, which would cause a division by zero panic when the decoder function is called.", "file": "lib/results.go", "line": 133}, {"description": "Potential division by zero in SinePacer.Pace method. On line 202, the code performs division by (hitsAtGuess - float64(elapsedHits)) without checking if the denominator is zero. If hitsAtGuess equals elapsedHits, this will cause a division by zero panic.", "file": "lib/pacer.go", "line": 202}, {"description": "Potential division by zero in NewHistogramReporter. On line 42, the code performs division by float64(h.Total) without checking if h.Total is zero. If the histogram has no data (h.Total == 0), this will cause a division by zero, resulting in NaN values.", "file": "lib/reporters.go", "line": 42}, {"description": "Incorrect function call in FuzzAttackerTCP and FuzzAttackerHTTP. Both functions call attacker.hit() with incorrect parameters. The hit() method expects (tr Targeter, atk *attack) but the functions are passing (targeter, \"fuzz\") where \"fuzz\" is a string instead of an *attack struct. This will cause a compilation error or runtime panic.", "file": "lib/attack_fuzz.go", "line": 64}, {"description": "Logic error in decodeFuzzHeaders function. On line 17, the code checks `fuzz[0] == 0` but uses the original `fuzz` slice instead of the `rest` slice. Since `rest` is being modified in the loop, this check should be `rest[0] == 0` to properly check the current position in the data being processed.", "file": "lib/util_fuzz.go", "line": 17}, {"description": "Logic error in decodeFuzzHeaders function. On line 27, the code checks `len(fuzz) == 1` but should check `len(rest) == 1` instead. Since `rest` is the current slice being processed in the loop, checking the original `fuzz` slice length is incorrect and could lead to wrong behavior.", "file": "lib/util_fuzz.go", "line": 27}], "updated_files": {}}