{"repo_id": "open-telemetry_opentelemetry-go_2285", "bugs": [{"description": "IPv6 address parsing bug: The code uses strings.LastIndex to find ':' for host:port separation, but this breaks IPv6 addresses which contain multiple colons. For example, '[::1]:8080' would be incorrectly parsed as host='[::1' and port='8080' instead of host='::1' and port='8080'. IPv6 addresses should be parsed using net.SplitHostPort() which properly handles IPv6 bracket notation. This affects both peer address parsing (lines 58-61) and host address parsing (lines 92-98).", "file": "/var/folders/hp/rv5nbb3140l0404lfjq_pq140000gn/T/tmp4lhou4zm/semconv/v1.4.0/http.go", "line": 58}, {"description": "IPv6 address parsing bug (second instance): Same issue as line 58 - uses strings.LastIndex to find ':' for host:port separation in the host parsing loop, which breaks IPv6 addresses. This code should use net.SplitHostPort() to properly handle IPv6 bracket notation like '[::1]:8080'.", "file": "/var/folders/hp/rv5nbb3140l0404lfjq_pq140000gn/T/tmp4lhou4zm/semconv/v1.4.0/http.go", "line": 92}, {"description": "X-Forwarded-For header parsing doesn't trim whitespace: The code extracts the first IP address from X-Forwarded-For header using strings.SplitN(values[0], \",\", 2) but doesn't trim whitespace from addresses[0]. According to RFC 7239, X-Forwarded-For can contain spaces around commas like 'ip1, ip2, ip3'. This could result in IP addresses with leading/trailing spaces being recorded as attributes.", "file": "/var/folders/hp/rv5nbb3140l0404lfjq_pq140000gn/T/tmp4lhou4zm/semconv/v1.4.0/http.go", "line": 229}, {"description": "Race condition in HTTPClientAttributesFromHTTPRequest: The function temporarily modifies request.URL.User by setting it to nil, calling request.URL.String(), then restoring it. This creates a race condition if multiple goroutines call this function with the same *http.Request object, as the URL.User field could be modified concurrently. This could lead to data races, incorrect URL strings being generated, or panics. The function should create a copy of the URL or use a different approach to remove credentials without modifying the original request.", "file": "/var/folders/hp/rv5nbb3140l0404lfjq_pq140000gn/T/tmp4lhou4zm/semconv/v1.4.0/http.go", "line": 152}], "updated_files": {}}