{"repo_id": "deluge-torrent_deluge_439", "bugs": [{"description": "Weak session ID checksum validation allows potential session hijacking. The make_checksum function uses a simple sum of character ordinals which is predictable and can be easily forged. An attacker could potentially generate valid session IDs by calculating the required checksum.", "file": "./deluge/ui/web/auth.py", "line": 25}, {"description": "Use of deprecated SHA-1 hash algorithm for password storage. SHA-1 is cryptographically broken and vulnerable to collision attacks. This could allow attackers to potentially find password collisions or use rainbow tables more effectively.", "file": "./deluge/ui/web/auth.py", "line": 127}, {"description": "Hardcoded default password credentials in configuration. The CONFIG_DEFAULTS contains hardcoded pwd_salt and pwd_sha1 values, which means all installations start with the same default password ('deluge'). This creates a significant security risk if users don't change the default password.", "file": "./deluge/ui/web/server.py", "line": 38}, {"description": "Potential path traversal vulnerability in file upload handling. The Upload.render method creates temporary files but doesn't validate the uploaded content or filenames, which could potentially be exploited for directory traversal attacks or to upload malicious files.", "file": "./deluge/ui/web/server.py", "line": 134}, {"description": "Information disclosure through detailed error messages. The JSON API error handling in _handle_request exposes detailed exception information including class names and error messages to clients, which could help attackers understand the internal system structure and find vulnerabilities.", "file": "./deluge/ui/web/json_api.py", "line": 167}, {"description": "Missing input validation on JSON request content. The _handle_request method processes JSON data without proper validation of the content size or structure, which could lead to denial of service attacks through large payloads or deeply nested JSON objects causing excessive memory usage or stack overflow.", "file": "./deluge/ui/web/json_api.py", "line": 137}, {"description": "Unsafe global variable injection in method execution. In _exec_local, the code sets __request__ as a global variable in the method's namespace (meth.__globals__['__request__'] = request), which could potentially be exploited to access or modify global state in unexpected ways.", "file": "./deluge/ui/web/json_api.py", "line": 117}, {"description": "Potential XSS vulnerability through template variable injection. The index.html template directly injects variables like ${js_config} and ${debug} into JavaScript without proper escaping or validation. If these variables contain user-controlled data, it could lead to cross-site scripting attacks.", "file": "./deluge/ui/web/index.html", "line": 29}, {"description": "Session fixation vulnerability in authentication. The check_request method automatically extends session expiration and resets cookies for valid sessions without proper validation. An attacker could potentially exploit this by fixating a session ID and then waiting for a legitimate user to authenticate with that session.", "file": "./deluge/ui/web/auth.py", "line": 158}], "updated_files": {}}