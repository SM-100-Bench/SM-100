{"repo_id": "canvg_canvg_1750", "bugs": [{"description": "In the addQuadraticCurve method, the parameters passed to addBezierCurve are in the wrong order. The method call on line 190 passes (p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y) but should pass (p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y). The cp1y and cp2x parameters are swapped, which will cause incorrect bounding box calculations for quadratic curves.", "file": "src/BoundingBox.ts", "line": 190}, {"description": "In the getReflectedControlPoint method on line 106, there's a potential null pointer exception. The code accesses this.previousCommand.type without checking if this.previousCommand is null. Since previousCommand is initialized as null and can be null, this will throw a runtime error when trying to access the 'type' property of null.", "file": "src/PathParser.ts", "line": 106}, {"description": "In the Font.parse method, there's a logical error in the font parsing logic. On lines 104, 113, and 123, the code uses Font.styles.includes(part), Font.variants.includes(part), and Font.weights.includes(part), but these static properties are strings (like 'normal|italic|oblique|inherit'), not arrays. The includes() method will check if the part is a substring of the string, which can lead to false positives. For example, 'mal' would match 'normal'. These should be converted to arrays first or use a different matching approach.", "file": "src/Font.ts", "line": 104}, {"description": "In the addQuadraticCurve method, the parameters passed to addBezierCurve are in the wrong order. The method call on line 190 passes (p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y) but should pass (p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y). The cp1y and cp2x parameters are swapped, which will cause incorrect bounding box calculations for quadratic curves.", "file": "src/BoundingBox.ts", "line": 190}, {"description": "In the getReflectedControlPoint method on line 106, there's a potential null pointer exception. The code accesses this.previousCommand.type without checking if this.previousCommand is null. Since previousCommand is initialized as null and can be null, this will throw a runtime error when trying to access the 'type' property of null.", "file": "src/PathParser.ts", "line": 106}, {"description": "In the Font.parse method, there's a logical error in the font parsing logic. On lines 104, 113, and 123, the code uses Font.styles.includes(part), Font.variants.includes(part), and Font.weights.includes(part), but these static properties are strings (like 'normal|italic|oblique|inherit'), not arrays. The includes() method will check if the part is a substring of the string, which can lead to false positives. For example, 'mal' would match 'normal'. These should be converted to arrays first or use a different matching approach.", "file": "src/Font.ts", "line": 104}, {"description": "Type mismatch in UseElement.cachedElement property. The property is declared as 'PathElement | undefined' but getHrefAttribute().getDefinition() can return any Element type, not just PathElement. This could cause runtime errors when calling element.path(ctx) if the referenced element doesn't have a path method.", "file": "src/Document/UseElement.ts", "line": 10}, {"description": "Potential null pointer exception in TextElement.getTextFromNode method. The method accesses textNode.parentNode without checking if it exists, which could cause a runtime error if the node has no parent.", "file": "src/Document/TextElement.ts", "line": 151}, {"description": "Division by zero error in AnimateElement.getProgress method. When lb equals ub (line 171), the expression (p - lb) / (ub - lb) will result in division by zero, causing NaN values that could break animations.", "file": "src/Document/AnimateElement.ts", "line": 171}, {"description": "Type assumption error in FilterElement.apply method. The code assumes all children are FeGaussianBlurElement (lines 32 and 59), but filter elements can have various types of filter effect children. This could cause runtime errors when accessing properties that don't exist on other filter element types.", "file": "src/Document/FilterElement.ts", "line": 32}, {"description": "Potential null pointer exception in StyleElement constructor. The code accesses props['font-family'] and props.src (lines 67-68) without checking if these properties exist, which could cause runtime errors when parsing @font-face rules that don't have these required properties.", "file": "src/Document/StyleElement.ts", "line": 67}, {"description": "Array index out of bounds error in StyleElement constructor. The code assumes cssParts[1] exists (line 42) when splitting CSS definitions by '{', but malformed CSS without a '{' character could cause cssParts[1] to be undefined, leading to runtime errors.", "file": "src/Document/StyleElement.ts", "line": 42}, {"description": "Array index out of bounds error in GradientElement.createGradient method. The code accesses stops[stops.length - 1] (line 61) without checking if the stops array is empty, which could cause a runtime error when there are no stop elements in the gradient.", "file": "src/Document/GradientElement.ts", "line": 61}, {"description": "Potential null pointer exception in PathElement.renderChildren method. The code accesses markers[0] and markers[markersLastIndex] (lines 137, 154) without checking if the markers array is empty, which could cause runtime errors when there are no markers.", "file": "src/Document/PathElement.ts", "line": 137}, {"description": "Potential undefined parameter usage in MarkerElement.render method. The method uses 'angle' parameter (lines 25, 89) without checking if it's defined, which could cause runtime errors when angle is undefined but orient is 'auto'.", "file": "src/Document/MarkerElement.ts", "line": 25}, {"description": "Unsafe prototype modification in ClipPathElement.apply method. The code modifies the prototype of the rendering context (lines 22-23, 48, 60-61) which could affect other instances of the same context type and cause unexpected behavior in concurrent operations or other parts of the application.", "file": "src/Document/ClipPathElement.ts", "line": 22}], "updated_files": {}}