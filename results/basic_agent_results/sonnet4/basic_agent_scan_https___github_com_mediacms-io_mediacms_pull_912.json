{"repo_id": "mediacms-io_mediacms_912", "bugs": [{"description": "Async function called without await in non-sync mode. The getRequest, postRequest, putRequest, and deleteRequest functions are declared as async but when sync=false, they don't await the axios calls, making the async declaration misleading and potentially causing unhandled promise rejections if the caller expects to await these functions.", "file": "./frontend/src/static/js/utils/helpers/requests.js", "line": 51}, {"description": "Missing null check for requestAnimationFrame. The code assigns requestAnimationFrame from vendor-prefixed versions but doesn't include the standard window.requestAnimationFrame as a fallback, and doesn't handle the case where none of these methods exist, which could result in undefined being assigned.", "file": "./frontend/src/static/js/utils/helpers/dom.js", "line": 28}, {"description": "Potential stack overflow in recursive function. The greaterCommonDivision function uses recursion without any safeguards against infinite recursion. If called with very large numbers or in edge cases, this could cause a stack overflow.", "file": "./frontend/src/static/js/utils/helpers/math.js", "line": 10}, {"description": "Potential division by zero error. In the getPosition function (line 191) and setMarkderDivStyle function (line 202, 210), there are divisions by player.duration() without checking if the duration is zero or null, which could cause runtime errors or NaN values.", "file": "./frontend/src/static/js/components/comments/videojs-markers.js", "line": 191}, {"description": "Potential stack overflow in recursive quickSort function. The quickSort function uses recursion without any safeguards against stack overflow for large arrays or worst-case scenarios (e.g., already sorted arrays). This could cause the call stack to exceed its limit.", "file": "./frontend/src/static/js/utils/helpers/quickSort.js", "line": 31}, {"description": "Reference to undefined variable 'fallback_extensions'. On line 80, the code references 'fallback_extensions.length' but the variable is defined as 'fallback_ext' on line 39. This will cause a ReferenceError at runtime.", "file": "./frontend/src/static/js/components/item-list/includes/itemLists/MediaItemPreviewer.js", "line": 80}, {"description": "Potential array index out of bounds error. In the extractDefaultVideoResolution function on line 241, the code returns keys[i + 1] without checking if i + 1 is within the array bounds. This could cause an undefined value to be returned when i is at the last index.", "file": "./frontend/src/static/js/components/media-viewer/VideoViewer/functions.js", "line": 241}, {"description": "Potential infinite loop in format function. The while loop on line 7 continues while views >= compare, but if views is a very large number or if there's an edge case where the condition never becomes false, this could result in an infinite loop that would freeze the browser.", "file": "./frontend/src/static/js/utils/helpers/formatViewsNumber.js", "line": 7}, {"description": "Function call missing parentheses. On line 17, supportLocalstorage is referenced without parentheses, so it's checking if the function exists rather than calling it to check if localStorage is supported. This should be supportLocalstorage().", "file": "./frontend/src/static/js/utils/classes/BrowserCache.js", "line": 17}, {"description": "Duplicate case statement in switch block. Lines 19 and 22 both have 'case 'ogg':' which means the second case will never be reached and is unreachable code. This is likely a copy-paste error.", "file": "./frontend/src/static/js/components/media-viewer/AudioViewer/functions.js", "line": 22}, {"description": "Potential division by zero error in aspect ratio calculations. In functions onEmbedWidthValueChange (line 52), onEmbedHeightValueChange (line 67), onKeepAspectRatioChange (line 84), and onAspectRatioChange (line 103), there are divisions by x and y values extracted from aspectRatio.split(':') without checking if these values are zero or valid numbers, which could cause runtime errors.", "file": "./frontend/src/static/js/components/media-actions/MediaShareEmbed.jsx", "line": 52}, {"description": "Method name conflicts with property name. The class has a property 'element' (line 20) and also defines a method 'element()' (line 50-52). This creates a naming conflict where the method will override the property, making the property inaccessible and potentially causing runtime errors when trying to access this.element.", "file": "./frontend/src/static/js/components/item-list/includes/itemLists/MediaItem.js", "line": 50}, {"description": "Unsafe JSON.parse without error handling. On line 49, JSON.parse(ret) is called without a try-catch block. If the stored data is corrupted or not valid JSON, this will throw a SyntaxError and crash the application.", "file": "./frontend/src/static/js/utils/classes/BrowserCache.js", "line": 49}], "updated_files": {}}