{
  "url": "https://github.com/tsenart/vegeta/commit/6fbe391628eeeae1adf39522a55078797e6e7f2e",
  "identifier": "tsenart_vegeta_6fbe391628eeeae1adf39522a55078797e6e7f2e",
  "code_blocks": [
    "json\nApply\n[\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/attack.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a046,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"DefaultMaxBody\u00a0is\u00a0set\u00a0to\u00a0-1\u00a0which\u00a0could\u00a0cause\u00a0integer\u00a0overflow\u00a0issues\u00a0on\u00a032-bit\u00a0systems\u00a0when\u00a0used\u00a0in\u00a0memory\u00a0allocation\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/attack.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a042,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"DefaultMaxWorkers\u00a0is\u00a0set\u00a0to\u00a0math.MaxUint64\u00a0which\u00a0could\u00a0cause\u00a0resource\u00a0exhaustion\u00a0on\u00a0systems\u00a0with\u00a0limited\u00a0resources\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/results.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0127,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"DecoderFor\u00a0function\u00a0doesn't\u00a0properly\u00a0handle\u00a0the\u00a0case\u00a0where\u00a0the\u00a0buffer\u00a0becomes\u00a0too\u00a0large,\u00a0potentially\u00a0leading\u00a0to\u00a0memory\u00a0exhaustion\u00a0with\u00a0malformed\u00a0input\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/targets.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0186,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"NewJSONTargeter\u00a0doesn't\u00a0limit\u00a0the\u00a0size\u00a0of\u00a0lines\u00a0it\u00a0reads,\u00a0potentially\u00a0vulnerable\u00a0to\u00a0memory\u00a0exhaustion\u00a0with\u00a0maliciously\u00a0crafted\u00a0input\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/metrics.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a073,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Add\u00a0method\u00a0doesn't\u00a0check\u00a0for\u00a0potential\u00a0integer\u00a0overflow\u00a0when\u00a0incrementing\u00a0Requests\u00a0counter,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0incorrect\u00a0metrics\u00a0on\u00a0very\u00a0long\u00a0runs\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/histogram.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a022,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Add\u00a0method\u00a0doesn't\u00a0validate\u00a0that\u00a0bucket\u00a0index\u00a0i\u00a0is\u00a0within\u00a0bounds\u00a0of\u00a0h.Counts\u00a0slice,\u00a0potential\u00a0panic\u00a0with\u00a0malformed\u00a0bucket\u00a0configuration\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/pacer.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a089,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"ConstantPacer.Pace\u00a0doesn't\u00a0handle\u00a0the\u00a0case\u00a0where\u00a0interval\u00a0*\u00a0hits\u00a0could\u00a0overflow\u00a0uint64,\u00a0leading\u00a0to\u00a0incorrect\u00a0timing\u00a0calculations\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/targets.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0234,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"NewStaticTargeter\u00a0uses\u00a0atomic\u00a0operations\u00a0but\u00a0doesn't\u00a0handle\u00a0the\u00a0case\u00a0where\u00a0int64\u00a0counter\u00a0i\u00a0overflows,\u00a0which\u00a0could\u00a0cause\u00a0unexpected\u00a0target\u00a0selection\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/results.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0192,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"headerBytes\u00a0function\u00a0doesn't\u00a0check\u00a0header\u00a0size\u00a0limits,\u00a0potentially\u00a0vulnerable\u00a0to\u00a0memory\u00a0exhaustion\u00a0with\u00a0very\u00a0large\u00a0headers\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"lib/attack.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0281,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"DNSCaching\u00a0function\u00a0doesn't\u00a0properly\u00a0handle\u00a0concurrent\u00a0access\u00a0to\u00a0the\u00a0resolver\u00a0cache,\u00a0potential\u00a0race\u00a0condition\"\n\u00a0\u00a0}\n]"
  ],
  "timestamp": "2025-05-01 17:27:39"
}