{
  "url": "https://github.com/klauspost/compress/pull/785",
  "identifier": "klauspost_compress_785",
  "code_blocks": [
    "json\nApply\n[\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/decoder.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0136,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Potential\u00a0race\u00a0condition\u00a0in\u00a0concurrent\u00a0stream\u00a0decoding\u00a0-\u00a0the\u00a0decoder\u00a0uses\u00a0a\u00a0shared\u00a0channel\u00a0for\u00a0decoders\u00a0but\u00a0doesn't\u00a0properly\u00a0synchronize\u00a0access\u00a0to\u00a0the\u00a0frame\u00a0state\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/decoder.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0577,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Close()\u00a0method\u00a0doesn't\u00a0properly\u00a0clean\u00a0up\u00a0all\u00a0resources\u00a0-\u00a0it\u00a0doesn't\u00a0drain\u00a0the\u00a0decoders\u00a0channel\u00a0or\u00a0wait\u00a0for\u00a0all\u00a0goroutines\u00a0to\u00a0complete\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/framedec.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0282,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"next()\u00a0method\u00a0doesn't\u00a0properly\u00a0validate\u00a0frame\u00a0content\u00a0size\u00a0against\u00a0maxDecodedSize\u00a0before\u00a0processing\u00a0blocks,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0memory\u00a0exhaustion\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/blockdec.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0279,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"decodeLiterals()\u00a0method\u00a0doesn't\u00a0properly\u00a0validate\u00a0input\u00a0size\u00a0against\u00a0maxCompressedBlockSize,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0buffer\u00a0overflow\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/blockdec.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0481,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"decodeCompressed()\u00a0method\u00a0doesn't\u00a0properly\u00a0validate\u00a0sequence\u00a0counts\u00a0against\u00a0maxSequences,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0memory\u00a0exhaustion\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/fse_decoder.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a098,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"readNCount()\u00a0method\u00a0doesn't\u00a0properly\u00a0validate\u00a0bitCount\u00a0against\u00a0remaining\u00a0buffer\u00a0size,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0buffer\u00a0overflow\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/fse_decoder.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0256,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"decSymbolValue()\u00a0method\u00a0doesn't\u00a0validate\u00a0symbol\u00a0value\u00a0against\u00a0maxSymbolValue,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0out-of-bounds\u00a0access\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/decoder.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0309,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"DecodeAll()\u00a0method\u00a0doesn't\u00a0properly\u00a0validate\u00a0input\u00a0size\u00a0against\u00a0maxDecodedSize,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0memory\u00a0exhaustion\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/framedec.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0343,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"runDecoder()\u00a0method\u00a0doesn't\u00a0properly\u00a0validate\u00a0window\u00a0size\u00a0against\u00a0maxWindowSize,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0memory\u00a0exhaustion\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"zstd/blockdec.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0686,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"executeSequences()\u00a0method\u00a0doesn't\u00a0properly\u00a0validate\u00a0sequence\u00a0lengths\u00a0against\u00a0maxMatchLen,\u00a0which\u00a0could\u00a0lead\u00a0to\u00a0buffer\u00a0overflow\"\n\u00a0\u00a0}\n]",
    "json\nApply\n[\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"internal/lz4ref/block.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0517,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Potential\u00a0buffer\u00a0overflow\u00a0in\u00a0UncompressBlock\u00a0function\u00a0-\u00a0no\u00a0bounds\u00a0checking\u00a0on\u00a0input\u00a0buffer\u00a0size\u00a0before\u00a0processing\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"internal/snapref/decode.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a045,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Integer\u00a0overflow\u00a0vulnerability\u00a0in\u00a0decodedLen\u00a0function\u00a0-\u00a0v\u00a0>\u00a00xffffffff\u00a0check\u00a0may\u00a0not\u00a0catch\u00a0all\u00a0overflow\u00a0cases\u00a0on\u00a032-bit\u00a0systems\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"internal/snapref/decode_other.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a020,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Potential\u00a0buffer\u00a0overflow\u00a0in\u00a0load32/load64\u00a0functions\u00a0-\u00a0no\u00a0explicit\u00a0bounds\u00a0checking\u00a0on\u00a0input\u00a0slice\u00a0length\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"internal/snapref/encode.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0269,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Resource\u00a0leak\u00a0in\u00a0Writer.Flush()\u00a0-\u00a0error\u00a0handling\u00a0may\u00a0leave\u00a0buffer\u00a0in\u00a0inconsistent\u00a0state\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"internal/snapref/encode_other.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0263,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Potential\u00a0integer\u00a0overflow\u00a0in\u00a0encodeBlock\u00a0function\u00a0-\u00a0tableSize\u00a0calculation\u00a0could\u00a0overflow\u00a0on\u00a0very\u00a0large\u00a0inputs\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"internal/cpuinfo/cpuinfo_amd64.s\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a01,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Assembly\u00a0code\u00a0lacks\u00a0proper\u00a0error\u00a0handling\u00a0for\u00a0CPUID\u00a0instruction\u00a0failure\u00a0cases\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"internal/fuzz/helpers.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0152,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Memory\u00a0leak\u00a0in\u00a0AddFromZip\u00a0function\u00a0-\u00a0file\u00a0handles\u00a0may\u00a0not\u00a0be\u00a0properly\u00a0closed\u00a0in\u00a0error\u00a0cases\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"internal/snapref/snappy.go\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a099,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"CRC32\u00a0checksum\u00a0implementation\u00a0may\u00a0be\u00a0vulnerable\u00a0to\u00a0collision\u00a0attacks\u00a0-\u00a0uses\u00a0Castagnoli\u00a0polynomial\u00a0which\u00a0has\u00a0known\u00a0weaknesses\"\n\u00a0\u00a0}\n]"
  ],
  "timestamp": "2025-05-01 14:45:17"
}