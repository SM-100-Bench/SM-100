{
  "url": "https://github.com/agronholm/apscheduler/pull/898",
  "identifier": "agronholm_apscheduler_efe1660",
  "code_blocks": [
    "json\nApply\n[\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"apscheduler/validators.py\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a044,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"The\u00a0as_timezone\u00a0function\u00a0returns\u00a0get_localzone()\u00a0when\u00a0value\u00a0is\u00a0None\u00a0or\u00a0'local'.\u00a0get_localzone()\u00a0may\u00a0return\u00a0a\u00a0tzlocal\u00a0object,\u00a0not\u00a0a\u00a0ZoneInfo,\u00a0which\u00a0could\u00a0cause\u00a0issues\u00a0elsewhere\u00a0if\u00a0only\u00a0ZoneInfo\u00a0is\u00a0expected.\u00a0This\u00a0could\u00a0lead\u00a0to\u00a0subtle\u00a0bugs\u00a0if\u00a0code\u00a0assumes\u00a0ZoneInfo-specific\u00a0attributes\u00a0like\u00a0'key'.\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"apscheduler/validators.py\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a053,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"In\u00a0as_timezone,\u00a0when\u00a0value\u00a0is\u00a0a\u00a0string,\u00a0it\u00a0is\u00a0passed\u00a0to\u00a0ZoneInfo.\u00a0If\u00a0the\u00a0string\u00a0is\u00a0not\u00a0a\u00a0valid\u00a0timezone,\u00a0ZoneInfo\u00a0will\u00a0raise\u00a0a\u00a0KeyError,\u00a0which\u00a0is\u00a0not\u00a0caught\u00a0or\u00a0converted\u00a0to\u00a0a\u00a0more\u00a0descriptive\u00a0error.\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"apscheduler/validators.py\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a097,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"In\u00a0as_aware_datetime,\u00a0if\u00a0a\u00a0naive\u00a0datetime\u00a0is\u00a0passed,\u00a0it\u00a0is\u00a0made\u00a0aware\u00a0by\u00a0simply\u00a0replacing\u00a0tzinfo,\u00a0which\u00a0does\u00a0not\u00a0adjust\u00a0the\u00a0time\u00a0for\u00a0the\u00a0timezone\u00a0offset.\u00a0This\u00a0can\u00a0cause\u00a0incorrect\u00a0results\u00a0for\u00a0timezones\u00a0with\u00a0offsets\u00a0or\u00a0DST.\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"apscheduler/triggers/cron/__init__.py\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0120,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Debug\u00a0print\u00a0statements\u00a0('print('incrementing',\u00a0field.name)')\u00a0are\u00a0present\u00a0in\u00a0production\u00a0code.\u00a0This\u00a0can\u00a0leak\u00a0information\u00a0and\u00a0pollute\u00a0logs.\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"apscheduler/triggers/cron/__init__.py\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0161,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"Debug\u00a0print\u00a0statements\u00a0(print(f'{field.name}:\u00a0current\u00a0value\u00a0=\u00a0{curr_value},\u00a0next_value\u00a0=\u00a0{next_value}'))\u00a0are\u00a0present\u00a0in\u00a0production\u00a0code.\u00a0This\u00a0can\u00a0leak\u00a0information\u00a0and\u00a0pollute\u00a0logs.\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"apscheduler/triggers/cron/__init__.py\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a0147,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"When\u00a0constructing\u00a0a\u00a0datetime\u00a0with\u00a0tzinfo=self.timezone,\u00a0if\u00a0self.timezone\u00a0is\u00a0a\u00a0ZoneInfo\u00a0or\u00a0tzlocal\u00a0object,\u00a0this\u00a0may\u00a0not\u00a0correctly\u00a0handle\u00a0ambiguous\u00a0or\u00a0non-existent\u00a0times\u00a0(e.g.,\u00a0during\u00a0DST\u00a0transitions).\u00a0This\u00a0can\u00a0cause\u00a0subtle\u00a0bugs\u00a0in\u00a0time\u00a0calculations.\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"apscheduler/triggers/interval.py\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a059,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"The\u00a0code\u00a0replaces\u00a0'self._last_fire_time\u00a0=\u00a0self.timezone.normalize(self._last_fire_time\u00a0+\u00a0self._interval)'\u00a0with\u00a0'self._last_fire_time\u00a0=\u00a0self._last_fire_time\u00a0+\u00a0self._interval'.\u00a0This\u00a0may\u00a0break\u00a0correct\u00a0timezone\u00a0normalization,\u00a0especially\u00a0for\u00a0DST\u00a0transitions,\u00a0leading\u00a0to\u00a0incorrect\u00a0next\u00a0fire\u00a0times.\"\n\u00a0\u00a0},\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"file\":\u00a0\"apscheduler/util.py\",\n\u00a0\u00a0\u00a0\u00a0\"line\":\u00a025,\n\u00a0\u00a0\u00a0\u00a0\"description\":\u00a0\"timezone_repr\u00a0assumes\u00a0ZoneInfo\u00a0has\u00a0a\u00a0'key'\u00a0attribute,\u00a0but\u00a0if\u00a0a\u00a0tzlocal\u00a0or\u00a0other\u00a0tzinfo\u00a0is\u00a0passed,\u00a0it\u00a0falls\u00a0back\u00a0to\u00a0repr(timezone).\u00a0This\u00a0may\u00a0not\u00a0be\u00a0a\u00a0stable\u00a0or\u00a0useful\u00a0string\u00a0for\u00a0serialization\u00a0or\u00a0display.\"\n\u00a0\u00a0}\n]"
  ],
  "timestamp": "2025-05-26 16:41:10"
}