diff --git a/packages/core/src/utils/serializeNode.tsx b/packages/core/src/utils/serializeNode.tsx
index 99fe824..647b041 100644
--- a/packages/core/src/utils/serializeNode.tsx
+++ b/packages/core/src/utils/serializeNode.tsx
@@ -1,45 +1,45 @@
 import React, { Children } from 'react';
 import { NodeData, ReducedComp, SerializedNode } from '../interfaces';
 import { Resolver } from '../interfaces';
 import { resolveComponent } from './resolveComponent';
 
 const reduceType = (type: React.ElementType | string, resolver: Resolver) => {
   if (typeof type === 'string') {
     return type;
   }
   return { resolvedName: resolveComponent(resolver, type) };
 };
 
 export const serializeComp = (
   data: Pick<NodeData, 'type' | 'isCanvas' | 'props'>,
   resolver: Resolver
 ): ReducedComp => {
   let { type, isCanvas, props } = data;
   props = Object.keys(props).reduce((result: Record<string, any>, key) => {
     const prop = props[key];
-    if (!prop) {
+    if (prop === undefined || prop === null) {
       return result;
     }
 
     if (key === 'children' && typeof prop !== 'string') {
       result[key] = Children.map(prop, (child) => {
         if (typeof child === 'string') {
           return child;
         }
         return serializeComp(child, resolver);
       });
     } else if (prop.type) {
       result[key] = serializeComp(prop, resolver);
     } else {
       result[key] = prop;
     }
     return result;
   }, {});
 
   return {
     type: reduceType(type, resolver),
     isCanvas: !!isCanvas,
     props,
   };
 };
 

