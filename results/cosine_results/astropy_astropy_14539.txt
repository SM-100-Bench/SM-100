{ "issues": [ { "file": "astropy/io/fits/file.py", "line": 588, "description": "In the 'def _open_filename' function, when opening files with 'open', the code does not use 'with' statements for file operations in every case. This can lead to file descriptor leaks if an exception occurs before the file is closed explicitly." }, { "file": "astropy/io/ascii/core.py", "line": 2356, "description": "In 'get_reader', user-supplied 'Reader' classes are instantiated with '**kwargs' that may include unvalidated user input, which could cause unexpected errors or vulnerabilities if not sanitized." }, { "file": "astropy/io/fits/_tiled_compression/src/compression.c", "line": 119, "description": "In function 'compress_tile', the code allocates memory for buffers but does not always check the result of 'malloc' for NULL before use, which could lead to segmentation faults on allocation failure." }, { "file": "astropy/io/ascii/src/tokenizer.c", "line": 142, "description": "The code uses 'strcpy' to copy user-provided strings without checking buffer sizes, which could result in a buffer overflow if the source string is longer than the destination." }, { "file": "astropy/io/fits/hdu/streaming.py", "line": 40, "description": "In class 'StreamingHDU', the '_file' attribute is sometimes set directly to an external file handle. There is no explicit file closure in the destructor, risking resource leaks if the object is deleted without the file being closed externally." }, { "file": "astropy/io/fits/scripts/fitsheader.py", "line": 73, "description": "The 'main' function uses 'eval' on user-supplied strings for header keyword values, which poses a security vulnerability to code injection if the input is not trusted." }, { "file": "astropy/io/fits/card.py", "line": 1135, "description": "In 'Card.fromstring', the code slices raw bytes and decodes them, but does not check for sufficient length before slicing, which can lead to 'IndexError' exceptions on short or malformed input." } ] }