{ "issues": [ { "file": "demo/epub/annotations.js", "line": 35, "description": "Potential unhandled exception: In 'loadAnnotations', if 'localStorage.getItem' returns invalid JSON, 'JSON.parse' will throw, causing an uncaught exception." }, { "file": "demo/epub/annotations.js", "line": 81, "description": "Possible XSS vulnerability: 'renderAnnotation' inserts annotation.text as innerHTML without sanitization, allowing injection of arbitrary HTML/scripts." }, { "file": "demo/epub/state.js", "line": 17, "description": "Potential missing null check: 'localStorage.getItem' may return null, which is not handled before 'JSON.parse', potentially causing an exception." }, { "file": "src/dom/epub/lib/sanitize-and-render.ts", "line": 1, "description": "Function 'sanitizeHTML' is present but not used consistently in areas where user-provided HTML is rendered (e.g., annotations), leading to possible XSS vectors." }, { "file": "src/dom/epub/epub-view.ts", "line": 102, "description": "Not checking for existence of DOM elements before accessing properties may lead to null dereference errors and runtime exceptions." }, { "file": "src/dom/epub/find.ts", "line": 54, "description": "Potential infinite loop or performance issue: 'while' loop for text searching does not cap iterations for large texts, risking UI lockup." }, { "file": "src/dom/epub/cfi.ts", "line": 210, "description": "No input validation: Functions that parse or construct CFIs do not validate input format, which may cause crashes or unexpected behavior with malformed input." }, { "file": "src/dom/epub/flow.ts", "line": 45, "description": "Possible division by zero or NaN: Calculations involving page dimensions do not check for zero/undefined, which may cause runtime errors." }, { "file": "src/dom/epub/lib/page-mapping.ts", "line": 89, "description": "Uncaught exception risk: DOM traversal assumes structure and may throw if expected nodes are missing or malformed." }, { "file": "src/dom/epub/section-view.ts", "line": 150, "description": "Memory/resource leak: Event listeners attached to iframes or dynamic elements are not always removed on cleanup, risking memory leaks." }, { "file": "src/dom/epub/stylesheets/content.css", "line": 1, "description": "No security issues found (CSS file)." } ] }