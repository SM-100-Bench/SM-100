{ "issues": [ { "file": "thefuck/rules/apt_get.py", "line": 24, "description": "Uses a regular expression on potentially untrusted command output without proper escaping, which could lead to false matches or missed matches if the package name contains regex meta-characters." }, { "file": "thefuck/rules/brew_cask_dependency.py", "line": 13, "description": "Assumes fixed output format from 'brew cask info', which may change and cause IndexError or incorrect parsing." }, { "file": "thefuck/rules/brew_link.py", "line": 11, "description": "Uses 'brew link' output parsing and assumes a specific output, which if changed could result in IndexError or incorrect suggestions." }, { "file": "thefuck/rules/cat_dir.py", "line": 9, "description": "Assumes STDERR message ends with 'Is a directory', which is locale dependent and may fail on non-English systems." }, { "file": "thefuck/rules/cd_cs.py", "line": 12, "description": "Potential for IndexError if command script is not split as expected." }, { "file": "thefuck/rules/cd_mkdir.py", "line": 9, "description": "Does not check if 'No such file or directory' message is locale dependent." }, { "file": "thefuck/rules/chmod_x.py", "line": 13, "description": "Does not check if file exists before creating chmod suggestion, may cause exception if file does not exist." }, { "file": "thefuck/rules/docker_login.py", "line": 9, "description": "Checks for 'docker login' failure by matching output string exactly; may miss error in other locales or Docker versions." }, { "file": "thefuck/rules/gem_unknown_command.py", "line": 13, "description": "Parses 'Did you mean?' from output, which is locale and version dependent; may cause parsing errors." }, { "file": "thefuck/rules/git_branch_delete.py", "line": 17, "description": "Does not sanitize branch name when constructing 'git branch -D' command, could lead to command injection if branch name is malicious." }, { "file": "thefuck/rules/git_checkout.py", "line": 32, "description": "Does not quote/sanitize the branch name when constructing the 'git checkout' command, which could allow shell injection if a branch name contains special characters." }, { "file": "thefuck/rules/git_push.py", "line": 17, "description": "Does not handle the case where 'git push' output changes, which may break the rule or miss valid cases." }, { "file": "thefuck/rules/git_push_force.py", "line": 12, "description": "Constructs a 'git push --force' command using user input without quoting, which could allow shell injection if branch or remote names are malicious." }, { "file": "thefuck/rules/git_tag_force.py", "line": 13, "description": "Does not sanitize tag names when constructing the 'git tag -f' command, which could be exploited if tag names are crafted maliciously." }, { "file": "thefuck/rules/npm_run_script.py", "line": 13, "description": "Does not check for script name injection when constructing npm run command, potential for shell injection." }, { "file": "thefuck/rules/open.py", "line": 13, "description": "Does not quote file paths in the constructed 'open' command, which could allow shell injection if file name contains special characters." }, { "file": "thefuck/rules/pip_install.py", "line": 12, "description": "Does not sanitize package names when constructing 'pip install' command, which could allow command injection if package name is malicious." }, { "file": "thefuck/rules/python_execute.py", "line": 15, "description": "Constructs a python command using user input without quoting, which could allow shell injection if file/script name is malicious." }, { "file": "thefuck/rules/rm_root.py", "line": 13, "description": "Suggests removing '/' or similar dangerous directories; although intent is to prevent, suggest adding extra checks/warnings to avoid catastrophic data loss." }, { "file": "thefuck/rules/sudo.py", "line": 12, "description": "Blindly prepends 'sudo' to the command, which could lead to privilege escalation if used recklessly or in an unexpected context." }, { "file": "thefuck/rules/unsudo.py", "line": 11, "description": "Strips 'sudo' from command but does not sanitize, which could remove 'sudo' from a malicious input and execute unintended commands." } ] }