{ "issues": [ { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "pkg/container/client.go", "line": 470, "description": "In waitForExecOrTimeout, fields from execInspect are logged before checking for an error from ContainerExecInspect, which could cause panics or misleading logs if execInspect is invalid." }, { "file": "pkg/container/client.go", "line": 195, "description": "In StopContainer, after container removal, if waitForStopOrTimeout returns nil (i.e., the container is gone), returns an error. This logic is likely inverted: success should not return an error." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "pkg/container/client.go", "line": 470, "description": "In waitForExecOrTimeout, fields from execInspect are logged before checking for an error from ContainerExecInspect, which could cause panics or misleading logs if execInspect is invalid." }, { "file": "pkg/container/client.go", "line": 195, "description": "In StopContainer, after container removal, if waitForStopOrTimeout returns nil (i.e., the container is gone), returns an error. This logic is likely inverted: success should not return an error." }, { "file": "pkg/container/container.go", "line": 68, "description": "ImageID() returns c.imageInfo.ID without nil check. If imageInfo is nil, this will panic." }, { "file": "pkg/container/container.go", "line": 58, "description": "Multiple methods access c.containerInfo fields without nil checks. If containerInfo is nil, these will panic." }, { "file": "pkg/container/container.go", "line": 185, "description": "GetCreateHostConfig() assumes valid link format (':' and '/') without error checking. Malformed links may cause panics." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "pkg/container/client.go", "line": 470, "description": "In waitForExecOrTimeout, fields from execInspect are logged before checking for an error from ContainerExecInspect, which could cause panics or misleading logs if execInspect is invalid." }, { "file": "pkg/container/client.go", "line": 195, "description": "In StopContainer, after container removal, if waitForStopOrTimeout returns nil (i.e., the container is gone), returns an error. This logic is likely inverted: success should not return an error." }, { "file": "pkg/container/container.go", "line": 68, "description": "ImageID() returns c.imageInfo.ID without nil check. If imageInfo is nil, this will panic." }, { "file": "pkg/container/container.go", "line": 58, "description": "Multiple methods access c.containerInfo fields without nil checks. If containerInfo is nil, these will panic." }, { "file": "pkg/container/container.go", "line": 185, "description": "GetCreateHostConfig() assumes valid link format (':' and '/') without error checking. Malformed links may cause panics." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "pkg/container/client.go", "line": 470, "description": "In waitForExecOrTimeout, fields from execInspect are logged before checking for an error from ContainerExecInspect, which could cause panics or misleading logs if execInspect is invalid." }, { "file": "pkg/container/client.go", "line": 195, "description": "In StopContainer, after container removal, if waitForStopOrTimeout returns nil (i.e., the container is gone), returns an error. This logic is likely inverted: success should not return an error." }, { "file": "pkg/container/container.go", "line": 68, "description": "ImageID() returns c.imageInfo.ID without nil check. If imageInfo is nil, this will panic." }, { "file": "pkg/container/container.go", "line": 58, "description": "Multiple methods access c.containerInfo fields without nil checks. If containerInfo is nil, these will panic." }, { "file": "pkg/container/container.go", "line": 185, "description": "GetCreateHostConfig() assumes valid link format (':' and '/') without error checking. Malformed links may cause panics." }, { "file": "pkg/container/metadata.go", "line": 41, "description": "getLabelValueOrEmpty, getLabelValue, and getBoolLabelValue access c.containerInfo.Config.Labels without checking if c.containerInfo or c.containerInfo.Config are nil, risking panics." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "pkg/container/client.go", "line": 470, "description": "In waitForExecOrTimeout, fields from execInspect are logged before checking for an error from ContainerExecInspect, which could cause panics or misleading logs if execInspect is invalid." }, { "file": "pkg/container/client.go", "line": 195, "description": "In StopContainer, after container removal, if waitForStopOrTimeout returns nil (i.e., the container is gone), returns an error. This logic is likely inverted: success should not return an error." }, { "file": "pkg/container/container.go", "line": 68, "description": "ImageID() returns c.imageInfo.ID without nil check. If imageInfo is nil, this will panic." }, { "file": "pkg/container/container.go", "line": 58, "description": "Multiple methods access c.containerInfo fields without nil checks. If containerInfo is nil, these will panic." }, { "file": "pkg/container/container.go", "line": 185, "description": "GetCreateHostConfig() assumes valid link format (':' and '/') without error checking. Malformed links may cause panics." }, { "file": "pkg/container/metadata.go", "line": 41, "description": "getLabelValueOrEmpty, getLabelValue, and getBoolLabelValue access c.containerInfo.Config.Labels without checking if c.containerInfo or c.containerInfo.Config are nil, risking panics." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "pkg/container/client.go", "line": 470, "description": "In waitForExecOrTimeout, fields from execInspect are logged before checking for an error from ContainerExecInspect, which could cause panics or misleading logs if execInspect is invalid." }, { "file": "pkg/container/client.go", "line": 195, "description": "In StopContainer, after container removal, if waitForStopOrTimeout returns nil (i.e., the container is gone), returns an error. This logic is likely inverted: success should not return an error." }, { "file": "pkg/container/container.go", "line": 68, "description": "ImageID() returns c.imageInfo.ID without nil check. If imageInfo is nil, this will panic." }, { "file": "pkg/container/container.go", "line": 58, "description": "Multiple methods access c.containerInfo fields without nil checks. If containerInfo is nil, these will panic." }, { "file": "pkg/container/container.go", "line": 185, "description": "GetCreateHostConfig() assumes valid link format (':' and '/') without error checking. Malformed links may cause panics." }, { "file": "pkg/container/metadata.go", "line": 41, "description": "getLabelValueOrEmpty, getLabelValue, and getBoolLabelValue access c.containerInfo.Config.Labels without checking if c.containerInfo or c.containerInfo.Config are nil, risking panics." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "pkg/container/client.go", "line": 470, "description": "In waitForExecOrTimeout, fields from execInspect are logged before checking for an error from ContainerExecInspect, which could cause panics or misleading logs if execInspect is invalid." }, { "file": "pkg/container/client.go", "line": 195, "description": "In StopContainer, after container removal, if waitForStopOrTimeout returns nil (i.e., the container is gone), returns an error. This logic is likely inverted: success should not return an error." }, { "file": "pkg/container/container.go", "line": 68, "description": "ImageID() returns c.imageInfo.ID without nil check. If imageInfo is nil, this will panic." }, { "file": "pkg/container/container.go", "line": 58, "description": "Multiple methods access c.containerInfo fields without nil checks. If containerInfo is nil, these will panic." }, { "file": "pkg/container/container.go", "line": 185, "description": "GetCreateHostConfig() assumes valid link format (':' and '/') without error checking. Malformed links may cause panics." }, { "file": "pkg/container/metadata.go", "line": 41, "description": "getLabelValueOrEmpty, getLabelValue, and getBoolLabelValue access c.containerInfo.Config.Labels without checking if c.containerInfo or c.containerInfo.Config are nil, risking panics." }, { "file": "cmd/notify-upgrade.go", "line": 62, "description": "Possible nil pointer dereference: if container.GetRunningContainerID() returns (nil, err), the subsequent call to cid.ShortID() will panic." }, { "file": "cmd/notify-upgrade.go", "line": 38, "description": "Creates temporary file in root directory ('/'). This is nonstandard, may fail due to permissions, and could be a minor security risk." }, { "file": "cmd/root.go", "line": 324, "description": "Possible deadlock on shutdown: after scheduler.Stop(), code blocks on <-lock. If no update is running, this may block indefinitely, preventing graceful shutdown." }, { "file": "internal/flags/flags.go", "line": 447, "description": "Possible nil pointer dereference: if the secret flag does not exist, flags.Lookup(secret) returns nil, and accessing flag.Value will panic." }, { "file": "pkg/container/cgroup_id.go", "line": 9, "description": "Regex incorrectly allows '|' in container ID: [a-f|0-9]{64} should be [a-f0-9]{64}. This could cause invalid container IDs to be matched." }, { "file": "pkg/container/client.go", "line": 470, "description": "In waitForExecOrTimeout, fields from execInspect are logged before checking for an error from ContainerExecInspect, which could cause panics or misleading logs if execInspect is invalid." }, { "file": "pkg/container/client.go", "line": 195, "description": "In StopContainer, after container removal, if waitForStopOrTimeout returns nil (i.e., the container is gone), returns an error. This logic is likely inverted: success should not return an error." }, { "file": "pkg/container/container.go", "line": 68, "description": "ImageID() returns c.imageInfo.ID without nil check. If imageInfo is nil, this will panic." }, { "file": "pkg/container/container.go", "line": 58, "description": "Multiple methods access c.containerInfo fields without nil checks. If containerInfo is nil, these will panic." }, { "file": "pkg/container/container.go", "line": 185, "description": "GetCreateHostConfig() assumes valid link format (':' and '/') without error checking. Malformed links may cause panics." }, { "file": "pkg/container/metadata.go", "line": 41, "description": "getLabelValueOrEmpty, getLabelValue, and getBoolLabelValue access c.containerInfo.Config.Labels without checking if c.containerInfo or c.containerInfo.Config are nil, risking panics." } ] }