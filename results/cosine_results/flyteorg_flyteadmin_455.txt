{ "issues": [ { "file": "auth/authzserver/authorize.go", "line": 74, "description": "In authCallbackEndpoint, the code loops over req.PostForm[\"scopes\"], but does not call req.ParseForm() or req.ParseMultipartForm(). This means PostForm may be empty unless ParseForm is called, resulting in no scopes being granted even when present." }, { "file": "auth/authzserver/authorize.go", "line": 104, "description": "In authEndpoint, the redirect URL is constructed as /login?redirect_url=..., but the authorizeCallbackRelativeURL may not be properly escaped, which could allow for open redirect or malformed URL issues if not sanitized." }, { "file": "auth/authzserver/resource_server.go", "line": 25, "description": "ResourceServer.ValidateAccessToken merges allowedAudience and expectedAudience, but if expectedAudience is user-controlled, this expands trust arbitrarily. This could allow tokens issued for one audience to be accepted for another, violating audience isolation." }, { "file": "auth/cookie.go", "line": 121, "description": "The NewCsrfToken function uses math/rand seeded with current time for CSRF token generation, which is predictable and not cryptographically secure. It should use crypto/rand for CSRF tokens." }, { "file": "auth/cookie.go", "line": 131, "description": "CSRF cookie is set with SameSite=Lax but missing Secure flag. If the application is served over HTTPS, the Secure flag should be set on all sensitive cookies to prevent leakage over insecure connections." }, { "file": "auth/cookie.go", "line": 150, "description": "getAuthFlowEndRedirect returns the raw value of the redirect URL cookie or query param without validating it as a safe, same-origin URL, potentially enabling open redirect vulnerabilities." }, { "file": "auth/cookie_manager.go", "line": 129, "description": "SetTokenCookies expects an id_token to be present and fails if missing, returning a 403. Some flows (like client_credentials) may not return an id_token, causing clients to be denied unnecessarily." }, { "file": "auth/cookie_manager.go", "line": 182, "description": "DeleteCookies deletes access and refresh token cookies but does not delete id_token or user_info cookies, which could allow lingering authentication data in the browser." }, { "file": "auth/token.go", "line": 47, "description": "ParseIDTokenAndValidate disables all client, issuer, and expiry checks if clientID is blank; this is dangerous and could allow tokens to be accepted without validation, which is a severe security risk." } ] }