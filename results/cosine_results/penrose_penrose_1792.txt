{ "issues": [ { "file": "src/App.tsx", "line": 126, "description": "Potential memory leak: The WebSocket event handlers (onclose, onerror, onopen, onmessage) set by connectRoger are never cleaned up or the WebSocket closed when the component unmounts." }, { "file": "src/App.tsx", "line": 162, "description": "Missing cleanup: The window 'beforeunload' event handler is registered in a useEffect, but never removed on component unmount, leading to possible memory leaks." }, { "file": "src/components/ExamplesBrowser.tsx", "line": 21, "description": "Unsafe DOM manipulation: Uses dangerouslySetInnerHTML with SVGs parsed/serialized from example.preview. If example.preview is user-controlled or fetched from untrusted sources, this could lead to XSS." }, { "file": "src/components/RogerPanel.tsx", "line": 111, "description": "Potential memory leak: Adds a 'message' event listener to ws for every trio selection, but never removes it, leading to unbounded listener growth." }, { "file": "src/components/SvgUploader.tsx", "line": 33, "description": "Potential race condition: The FileReader event handlers (onabort, onerror, onload) are assigned but not cleaned up after use, which could be problematic if the component unmounts during file reading." }, { "file": "src/utils/downloadUtils.ts", "line": 40, "description": "Promise bug: In fetchResource, localforage.setItem is called with httpBody (a Promise), not the resolved string, which could result in storing '[object Promise]' instead of content." }, { "file": "src/utils/downloadUtils.ts", "line": 101, "description": "Potentially unhandled Promise: In pathResolver, the 'roger' case returns a Promise that is never rejected if the ws never responds, potentially causing a dangling unresolved Promise." }, { "file": "src/worker/OptimizerWorker.ts", "line": 163", "description": "Possible deadlock: If the worker never responds, Promises in OptimizerWorker (e.g., compile, startOptimizing) may never resolve or reject, potentially stalling the UI." } ] }