{ "issues": [ { "file": "deluge/ui/web/auth.py", "line": 67, "description": "Session IDs are generated using only a SHA256 hash of os.urandom(32), but the checksum appended is simply the sum of the ASCII values of the hex string. This checksum is not cryptographically secure and may allow trivial forgery of session IDs by attackers." }, { "file": "deluge/ui/web/auth.py", "line": 176, "description": "Password storage uses SHA1 (with salt) for hashing. SHA1 is considered cryptographically broken and unsuitable for further use. Use a modern password hashing algorithm such as bcrypt, scrypt, or Argon2." }, { "file": "deluge/ui/web/auth.py", "line": 204, "description": "Session renewal logic updates the session expiry and re-adds the existing cookie. However, if a session is expired but present in the config, it is not removed until the _clean_sessions loop runs. There is a window where expired sessions may be accepted." }, { "file": "deluge/ui/web/auth.py", "line": 248, "description": "In delete_session, the code deletes the session from config by session_id from the request. However, it does not check if session_id is set or valid, which could cause a KeyError exception if the session is already deleted or invalid." }, { "file": "deluge/ui/web/auth.py", "line": 237, "description": "In check_session, the function always returns whether request.session_id is not None, but does not actually check if the session is still valid (e.g., not expired). This could lead to false positives." }, { "file": "deluge/ui/web/json_api.py", "line": 96, "description": "The _exec_remote method splits method names using '.', which could raise ValueError if the method string does not contain a '.'. There is no error handling for malformed method names." }, { "file": "deluge/ui/web/json_api.py", "line": 126, "description": "In _on_json_request, the content-type header is decoded without checking if it exists, which could raise an AttributeError if the header is missing." }, { "file": "deluge/ui/web/json_api.py", "line": 384, "description": "The download_torrent_from_url method downloads files to a temporary directory and returns the filename, but does not remove the temp directory or handle cleanup. This could lead to disk space exhaustion if abused." }, { "file": "deluge/ui/web/pluginmanager.py", "line": 27, "description": "The gather_info function uses getattr(plugin, 'debug_scripts') without a default value, which will raise an AttributeError if debug_scripts is not present and is None. Should use getattr(plugin, 'debug_scripts', scripts) instead." }, { "file": "deluge/ui/web/server.py", "line": 142, "description": "In the Upload resource, uploaded files are written using os.write(fd, upload) with unvalidated data. There is no check on file size or content, which could allow disk flooding or writing malicious files." }, { "file": "deluge/ui/web/server.py", "line": 320, "description": "In LookupResource.render, the code decodes and joins paths for file serving. There is a possible path traversal risk if lookup_path or filename is manipulated. Ensure strict validation/sanitization." }, { "file": "deluge/ui/web/server.py", "line": 688, "description": "In DelugeWeb.start_normal, the web server is started on all interfaces (0.0.0.0) by default. If not intended, this exposes the UI to the entire network and may allow unauthorized access." } ] }