{ "issues": [ { "file": "requests/_internal_utils.py", "line": 18, "description": "In to_native_string, if 'string' is not a bytes or str instance, calling decode/encode can raise AttributeError or TypeError. No input validation." }, { "file": "requests/cookies.py", "line": 69, "description": "MockResponse.getheaders does not return the result of self._headers.getheaders(name); always returns None." }, { "file": "requests/cookies.py", "line": 367, "description": "RequestsCookieJar.getstate pops '_cookies_lock' without checking if present, which could raise KeyError if attribute is absent." }, { "file": "requests/structures.py", "line": 97, "description": "LookupDict.getitem and get access self.dict, not the dict content, so LookupDict()['foo'] always returns None instead of raising KeyError or returning dict value." }, { "file": "requests/structures.py", "line": 79, "description": "CaseInsensitiveDict.copy calls CaseInsensitiveDict(self._store.values()), but constructor expects a dict, not a sequence of (key, value) pairs. This can cause incorrect behavior." }, { "file": "requests/utils.py", "line": 133, "description": "extract_zipped_paths writes the extracted file to a predictable location in the system temp directory. This can cause a race condition or security issue if the file exists (TOCTOU bug)." }, { "file": "requests/utils.py", "line": 129, "description": "extract_zipped_paths does not close the zip file after extraction, which could lead to file descriptor leaks." }, { "file": "requests/utils.py", "line": 820, "description": "dotted_netmask uses 0xffffffff ^ (1 << 32 - mask) - 1, which relies on operator precedence and could produce incorrect results if mask is not parenthesized." } ] }