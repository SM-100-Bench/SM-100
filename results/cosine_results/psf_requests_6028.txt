{ "issues": [ { "file": "requests/init.py", "line": 46, "description": "In check_compatibility(), an AssertionError is raised if urllib3 is installed from git ('dev'), but this is caught and only a warning is issued. This could cause user confusion if the library fails due to incompatible dependencies later." }, { "file": "requests/init.py", "line": 60, "description": "check_compatibility() assumes that the version string of urllib3, chardet, and charset_normalizer will always be in 'major.minor.patch' format. If not, ValueError may be raised." }, { "file": "requests/init.py", "line": 81, "description": "_check_cryptography() assumes cryptography_version is dot-separated integers. Pre-release or post-release tags (e.g., '3.4.7rc1') will cause ValueError and skip the version check silently." }, { "file": "requests/adapters.py", "line": 204, "description": "HTTPAdapter.cert_verify() sets conn.cert_reqs = 'CERT_REQUIRED' or 'CERT_NONE', but urllib3 uses the constants from the ssl module (e.g., ssl.CERT_REQUIRED). Using string values may break on Python versions where urllib3 expects integer constants." }, { "file": "requests/adapters.py", "line": 228, "description": "HTTPAdapter.cert_verify() checks if cert is a string or tuple, but does not validate tuple length or contents. Passing a tuple of length != 2 or with non-string entries could cause attribute errors or crashes." }, { "file": "requests/adapters.py", "line": 330, "description": "HTTPAdapter.send(), in the chunked branch, iterates over request.body (for i in request.body), assuming it is iterable of bytes. If request.body is not iterable, this will raise TypeError." }, { "file": "requests/adapters.py", "line": 336, "description": "In HTTPAdapter.send(), when low_conn.getresponse() raises an exception, low_conn.close() is called but any exception in close() is silently suppressed, potentially masking resource cleanup issues." } ] }