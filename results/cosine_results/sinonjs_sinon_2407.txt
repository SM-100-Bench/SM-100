{ "issues": [ { "file": "lib/sinon/proxy-call-util.js", "line": 32, "description": "In delegateToCalls, currentCall[actual || method] is invoked without checking whether it exists or is a function. If the proxy's call structure is corrupted or a method is missing, this will throw a TypeError." }, { "file": "lib/sinon/proxy-call.js", "line": 128, "description": "The throwArg method throws this.args[pos] without checking if the value is an Error object. Throwing non-Error values is discouraged and can lead to confusing stack traces." }, { "file": "lib/sinon/proxy-invoke.js", "line": 13, "description": "Uses a module-level callId counter. In concurrent test runners or isolated VMs, this could produce non-unique callIds, leading to confusing behavior in call ordering." }, { "file": "lib/sinon/spy-formatters.js", "line": 74, "description": "In the D formatter, calledArgs and expectedArgs arrays are mutated in-place when quoting string values. This could cause subtle bugs if these arrays are reused elsewhere." }, { "file": "lib/sinon/spy.js", "line": 158, "description": "When using the 'types' parameter in spy(), if getPropertyDescriptor returns undefined, the code will attempt to access undefined[type], which can cause a crash." } ] }