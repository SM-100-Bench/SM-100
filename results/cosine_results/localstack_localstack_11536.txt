{ "issues": [ { "file": "localstack-core/localstack/services/s3/provider.py", "line": 213, "description": "Potential path traversal vulnerability when extracting the object key from URLs. The code does not sanitize object key inputs, which could allow requests for '../' or absolute paths, resulting in unauthorized file access or overwrite on the server-side storage." }, { "file": "localstack-core/localstack/services/s3/website_hosting.py", "line": 89, "description": "Uncontrolled exposure of error message content in response. When returning error responses, exception messages and stacktraces may be returned to clients, potentially leaking sensitive server information." }, { "file": "localstack-core/localstack/services/s3/storage/core.py", "line": 63, "description": "Possible race condition due to non-atomic file creation and deletion. When saving or deleting objects, the code does not explicitly handle race conditions or partial writes, which could cause data loss or inconsistent state if accessed concurrently." }, { "file": "localstack-core/localstack/services/s3/legacy/utils_moto.py", "line": 45, "description": "Use of eval() found when parsing certain S3 conditions. This presents a remote code execution risk if untrusted input is ever passed into this function." }, { "file": "localstack-core/localstack/services/apigateway/next_gen/execute_api/handlers/integration.py", "line": 144, "description": "Uncaught exceptions from downstream integration execution may crash the worker or leak stack traces. Recommend robust try/except and error mapping to API Gateway error responses." }, { "file": "localstack-core/localstack/services/apigateway/next_gen/execute_api/integrations/http.py", "line": 84, "description": "Host header injection possible if user-supplied headers are forwarded without validation. This could allow SSRF or request smuggling attacks." }, { "file": "localstack-core/localstack/services/lambda_/invocation/docker_runtime_executor.py", "line": 283, "description": "User-supplied code is executed inside containers with potentially excessive privileges. There's no evidence of resource limits, capability dropping, or filesystem isolation beyond Docker defaults, increasing risk of container escape or DoS." }, { "file": "localstack-core/localstack/services/cloudformation/engine/template_deployer.py", "line": 680, "description": "yaml.safe_load() is used on user-supplied CloudFormation templates, which is good, but there are code paths using yaml.load() without specifying Loader=safe_load, which allows arbitrary code execution. Review all yaml.load() usage." }, { "file": "localstack-core/localstack/services/s3/codec.py", "line": 121, "description": "Improper handling of multipart upload boundaries may allow for request smuggling or denial of service. The code parses boundaries directly from headers without limiting length or validating structure." } ] }