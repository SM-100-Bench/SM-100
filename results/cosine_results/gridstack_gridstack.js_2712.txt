{ "issues": [ { "file": "src/dd-draggable.ts", "line": 66, "description": "In the DDDraggable constructor, option.handle is accessed as a string without checking if it is defined. If option.handle is undefined, substring(1) will throw an exception." }, { "file": "src/dd-draggable.ts", "line": 186, "description": "In _mouseMove, e.x and e.y are accessed. If e is a MouseEvent, these properties may be undefined in some browsers, leading to NaN calculations." }, { "file": "src/dd-draggable.ts", "line": 314, "description": "In _dragFollow, e.clientX and e.clientY are used. If e is a synthetic event or not a MouseEvent, these fields could be undefined." }, { "file": "src/dd-draggable.ts", "line": 400, "description": "In ui(), this.helper is assumed to be defined but may be undefined if dragging state is not properly set up." }, { "file": "src/dd-droppable.ts", "line": 86, "description": "In enable(), event listeners are added directly, but no guard is present to prevent multiple additions if enable() is called twice without disable(), which can cause duplicate handlers and memory leaks." }, { "file": "src/dd-resizable.ts", "line": 307, "description": "In _constrainSize, division by this.rectScale.x and this.rectScale.y is performed without checking if these scale values are zero, which could result in division by zero and NaN size constraints." }, { "file": "src/dd-resizable.ts", "line": 127, "description": "In _setupHandlers, this.option.handles is split and mapped without checking if handles is a non-empty string, which could cause a runtime error if handles is undefined." }, { "file": "src/dd-touch.ts", "line": 40, "description": "simulateMouseEvent calls e.target.dispatchEvent without checking if e.target is non-null and is an EventTarget, which could cause exceptions." }, { "file": "src/dd-touch.ts", "line": 74, "description": "simulatePointerMouseEvent also calls e.target.dispatchEvent without type guard, with similar risk as above." }, { "file": "src/gridstack-engine.ts", "line": 141, "description": "In cacheRects, n._rect is assigned with calculations based on h, w, top, right, bottom, left, but these parameters are not validated. Negative or undefined values could result in invalid rectangles and rendering bugs." }, { "file": "src/gridstack-engine.ts", "line": 688, "description": "In getDirtyNodes, no check is made to ensure n._dirty is not undefined, potentially causing getDirtyNodes to return all nodes if _dirty is unset elsewhere." }, { "file": "src/gridstack.ts", "line": 1709, "description": "In removeWidget, if el.gridstackNode is undefined and the fallback search this.engine.nodes.find(n => el === n.el) also fails, the function returns without removing the element. This can result in orphaned DOM elements if the element structure has changed unexpectedly." }, { "file": "src/gridstack.ts", "line": 2110, "description": "In _prepareDragDropByNode, the event handlers (onStartMoving, dragOrResize, onEndMoving) use variables cellWidth and cellHeight that are set inside onStartMoving but may be undefined if dragOrResize is called before onStartMoving, leading to NaN calculations." }, { "file": "src/utils.ts", "line": 171, "description": "In addCSSRule, the method assumes that either sheet.addRule or sheet.insertRule is available, but does not handle the case where neither is present, which could occur in non-standard environments." } ] }