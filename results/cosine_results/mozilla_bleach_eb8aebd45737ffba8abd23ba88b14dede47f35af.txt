{ "issues": [ { "file": "bleach/sanitizer.py", "line": 50, "description": "The Cleaner class is documented as not thread-safe due to internal parser state. Using a single Cleaner instance across threads may lead to data races and unpredictable sanitizer results." }, { "file": "bleach/sanitizer.py", "line": 261, "description": "In sanitize_uri_value, the function attempts to parse and validate URLs/protocols, but the check 'if \"http\" in allowed_protocols: return value' may allow dangerous relative URLs (e.g. '//evil.com') if 'http' is in allowed_protocols, as these are interpreted as absolute URLs in browsers. This could lead to XSS if untrusted input is sanitized." }, { "file": "bleach/sanitizer.py", "line": 268, "description": "In sanitize_uri_value, the check 'if \":\" in new_value and new_value.split(\":\")[0] in allowed_protocols: return value' does not verify that the colon is at the start of the string, so strings like 'javascript:alert(1)' (if allowed_protocols includes 'javascript') would be accepted. However, more critically, this check is redundant if allowed_protocols is trusted and controlled, but if user input could affect allowed_protocols, it is dangerous." }, { "file": "bleach/utils.py", "line": 29, "description": "The force_unicode function assumes that all byte strings are UTF-8 encoded. If the input is a byte string with a different encoding, this will raise a UnicodeDecodeError. This could cause crashes if input encoding is not validated elsewhere." }, { "file": "bleach/linkifier.py", "line": 127, "description": "In Linker.linkify, if text is not a string, a TypeError is raised. This is expected, but the error message is generic ('argument must be of text type') and does not clarify accepted types (e.g. bytes vs. unicode), which could hinder debugging for users." }, { "file": "bleach/linkifier.py", "line": 309, "description": "In LinkifyFilter.handle_links, when adding 'http://' to URLs without a protocol, the code may incorrectly linkify malformed or partial domains, which could facilitate phishing or URL spoofing if user input is not strictly validated." } ] }