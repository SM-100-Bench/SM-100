diff --git a/src/editor_commands_test.js b/src/editor_commands_test.js
index fbb7fe267c2..a7987dca3a1 100644
--- a/src/editor_commands_test.js
+++ b/src/editor_commands_test.js
@@ -574,6 +574,18 @@ module.exports = {
         assert.equal(editor.getSelectedText(), "");
         editor.textInput.getElement().dispatchEvent(e);
         assert.equal(editor.getSelectedText(), "123");
+    },
+    "test fold": function() {
+        editor = new Editor(new MockRenderer());
+        editor.session.setMode(new JavaScriptMode);
+        editor.session.setValue('"string"');
+        editor.execCommand("fold");
+        assert.equal(editor.session.getFoldLine(0), undefined);
+        editor.session.setValue('"string\\\nsecondline"');
+        editor.execCommand("fold");
+        assert.equal(editor.session.getFoldLine(0).end.row, 1);
+        editor.execCommand("unfold");
+        assert.equal(editor.session.getFoldLine(0), undefined);
     }
 };
 

diff --git a/src/mode/folding/cstyle_test.js b/src/mode/folding/cstyle_test.js
index 9af2dd2d2ba..4f10a84dedc 100644
--- a/src/mode/folding/cstyle_test.js
+++ b/src/mode/folding/cstyle_test.js
@@ -46,12 +46,12 @@ module.exports = {
     
     "test: fold sections": function() {
         var session = new EditSession([
-            '/* section0 */',
+            '/*** section0 ***/',
             '{',
-            '    /* section1 */',
+            '    /*** section1 ***/',
             '    stuff',
             '       ',
-            '    /* section2 */',
+            '    /*** section2 ***/',
             '       ',
             '    stuff',
             '       ',
@@ -63,9 +63,9 @@ module.exports = {
         session.setFoldStyle("markbegin");
         session.setMode(mode);
         
-        assert.range(session.getFoldWidgetRange(0, true), 0, 14, 10, 3);
-        assert.range(session.getFoldWidgetRange(2, true), 2, 18, 3, 9);
-        assert.range(session.getFoldWidgetRange(5, true), 5, 18, 7, 9);
+        assert.range(session.getFoldWidgetRange(0, true), 0, 18, 10, 3);
+        assert.range(session.getFoldWidgetRange(2, true), 2, 22, 3, 9);
+        assert.range(session.getFoldWidgetRange(5, true), 5, 22, 7, 9);
     }
 };
 
diff --git a/src/test/all_browser.js b/src/test/all_browser.js
index 5112b367111..12f56bba153 100644
--- a/src/test/all_browser.js
+++ b/src/test/all_browser.js
@@ -22,6 +22,7 @@ var buildDom = eval("(" + buildDom.toString().replace(/document\./g, "") + ")");
 var testNames = [
     "ace/ace_test",
     "ace/anchor_test",
+    "ace/autocomplete/inline_test",
     "ace/autocomplete/popup_test",
     "ace/autocomplete_test",
     "ace/background_tokenizer_test",
@@ -30,60 +31,78 @@ var testNames = [
     "ace/document_test",
     "ace/edit_session_test",
     "ace/editor_change_document_test",
+    "ace/editor_commands_test",
     "ace/editor_highlight_selected_word_test",
     "ace/editor_navigation_test",
-    "ace/editor_text_edit_test",
-    "ace/editor_commands_test",
     "ace/editor_options_test",
+    "ace/editor_text_edit_test",
+    "ace/ext/beautify_test",
+    "ace/ext/code_lens_test",
     "ace/ext/command_bar_test",
+    "ace/ext/emmet_test",
+    "ace/ext/error_marker_test",
     "ace/ext/hardwrap_test",
     "ace/ext/inline_autocomplete_test",
+    "ace/ext/simple_tokenizer_test",
     "ace/ext/static_highlight_test",
     "ace/ext/whitespace_test",
-    "ace/ext/error_marker_test",
-    "ace/ext/code_lens_test",
-    "ace/ext/beautify_test",
-    "ace/ext/simple_tokenizer_test",
     "ace/incremental_search_test",
     "ace/keyboard/emacs_test",
-    "ace/keyboard/textinput_test",
+    "ace/keyboard/gutter_handler_test",
     "ace/keyboard/keybinding_test",
-    "ace/keyboard/vim_test",
-    "ace/keyboard/vim_ace_test",
     "ace/keyboard/sublime_test",
-    "ace/keyboard/gutter_handler_test",
+    "ace/keyboard/textinput_test",
+    "ace/keyboard/vim_ace_test",
+    "ace/keyboard/vim_test",
     "ace/layer/text_test",
     "ace/lib/event_emitter_test",
+    "ace/marker_group_test",
+    "ace/mode/_test/highlight_rules_test",
+    "ace/mode/ada_test",
+    "ace/mode/behaviour/behaviour_test",
     "ace/mode/coldfusion_test",
     "ace/mode/css_test",
+    "ace/mode/folding/basic_test",
+    "ace/mode/folding/coffee_test",
+    "ace/mode/folding/cstyle_test",
+    "ace/mode/folding/drools_test",
+    "ace/mode/folding/fold_mode_test",
+    "ace/mode/folding/html_test",
+    "ace/mode/folding/javascript_test",
+    "ace/mode/folding/latex_test",
+    "ace/mode/folding/lua_test",
+    "ace/mode/folding/php_test",
+    "ace/mode/folding/pythonic_test",
+    "ace/mode/folding/ruby_test",
+    "ace/mode/folding/vbscript_test",
+    "ace/mode/folding/xml_test",
+    "ace/mode/folding/yaml_test",
     "ace/mode/html_test",
     "ace/mode/javascript_test",
     "ace/mode/logiql_test",
+    "ace/mode/odin_test",
+    "ace/mode/php_test",
+    "ace/mode/plain_text_test",
     "ace/mode/python_test",
+    "ace/mode/ruby_test",
     "ace/mode/text_test",
+    "ace/mode/vbscript_test",
     "ace/mode/xml_test",
-    "ace/mode/folding/fold_mode_test",
-    "ace/mode/folding/cstyle_test",
-    "ace/mode/folding/html_test",
-    "ace/mode/folding/pythonic_test",
-    "ace/mode/folding/xml_test",
-    "ace/mode/folding/coffee_test",
-    "ace/mode/behaviour/behaviour_test",
-    "ace/multi_select_test",
-    "ace/mouse/mouse_handler_test",
     "ace/mouse/default_gutter_handler_test",
+    "ace/mouse/mouse_handler_test",
+    "ace/multi_select_test",
     "ace/occur_test",
     "ace/placeholder_test",
-    "ace/range_test",
     "ace/range_list_test",
+    "ace/range_test",
+    "ace/scrollbar_test",
     "ace/search_test",
     "ace/selection_test",
     "ace/snippets_test",
-    "ace/marker_group_test",
-    "ace/tooltip_test",
+    "ace/test/mockdom_test",
     "ace/token_iterator_test",
     "ace/tokenizer_test",
-    "ace/test/mockdom_test",
+    "ace/tooltip_test",
     "ace/undomanager_test",
     "ace/virtual_renderer_test"
 ];
diff --git a/src/test/update_test_list.js b/src/test/update_test_list.js
new file mode 100644
index 00000000000..f1513b2049e
--- /dev/null
+++ b/src/test/update_test_list.js
@@ -0,0 +1,31 @@
+#!/usr/bin/env node
+var { execSync } = require("child_process");
+var fs = require("fs");
+
+// Run the git command to list files
+var stdout = execSync("git ls-tree -r HEAD --name-only", { cwd: __dirname + "/../../" }).toString();
+
+// Filter the list for files matching /src.*_test.js/
+var testFiles = stdout
+    .split("\n")
+    .filter(file => /src.*_test\.js$/.test(file))
+    .map(file => file.replace(/^src\//, "ace/").replace(/.js$/, ""));
+
+if (testFiles.length === 0) {
+    console.log("No matching test files found.");
+    process.exit(0);
+}
+
+// Read the all_browser.js file
+var allBrowserFilePath = __dirname + "/all_browser.js";
+var data = fs.readFileSync(allBrowserFilePath, "utf8");
+
+// Replace the testNames array with the new list
+var updatedData = data.replace(
+    /var testNames = \[[^\]]*?\];/,
+    `var testNames = [\n    "${testFiles.join('",\n    "')}"\n];`
+);
+
+// Write the updated content back to the file
+fs.writeFileSync(allBrowserFilePath, updatedData, "utf8");
+console.log("Updated testNames array in all_browser.js successfully.");